package com.group3.basic.netcracker.backend.controller;
import java.util.ArrayList;
import java.util.List;

import com.group3.basic.netcracker.backend.dto.CheckLessonAttendanceDto;
import com.group3.basic.netcracker.backend.dto.CourseAttendanceDto;
import com.group3.basic.netcracker.backend.dto.LessonAttendanceDto;
import com.group3.basic.netcracker.backend.dto.UserAttendanceDto;
import com.group3.basic.netcracker.backend.entity.Course;
import com.group3.basic.netcracker.backend.entity.Lesson;
import com.group3.basic.netcracker.backend.service.CheckAttendanceService;
import com.group3.basic.netcracker.backend.util.authorization.message.response.ResponseMessage;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.ModelAndView;
import com.group3.basic.netcracker.backend.entity.Attendance;
import com.group3.basic.netcracker.backend.service.AttendanceService;
 
/**
 * A Spring controller that allows the users to download an Excel document
 * generated by the Apache POI library.
 *
 */
@CrossOrigin(origins = "*", maxAge = 3600)
@RestController
@RequestMapping("/api")
public class AttendanceAPI {
	private AttendanceService attendanceService;
	private CheckAttendanceService checkAttendanceService;

	@Autowired
    public AttendanceAPI(AttendanceService attendanceService, CheckAttendanceService checkAttendanceService) {
        this.attendanceService = attendanceService;
        
        /**
         * Handle request to download an Excel document
         */
        this.checkAttendanceService = checkAttendanceService;
    }
    @RequestMapping(value = "/attendanceExcel", method = RequestMethod.GET)
    public ModelAndView attendanceExcel() {
        // take some data
        List<Attendance> listAttendance = new ArrayList<Attendance>();
        listAttendance = attendanceService.listAttendance();
        // return a view which will be resolved by an excel view resolver
        return new ModelAndView("attendanceView", "listAttendance", listAttendance);
   }


   @GetMapping("/attCourse")
   public ResponseEntity<?> getAllCourseAttendance () {

	    List<CourseAttendanceDto> list = attendanceService.getAllCourseAttendance();
	    return ResponseEntity.ok().body(list);

   }

   @GetMapping("/attLesson")
   public ResponseEntity<?> getLessonsByCourse (@RequestBody Course course) {

	    List<LessonAttendanceDto> list = attendanceService.getLessonsOfCourseAttendance(course.getId());
	    return ResponseEntity.ok().body(list);
   }


    @GetMapping("/attUser")
    public ResponseEntity<?> getUsersByLesson (@RequestBody Lesson lesson) {

        List<UserAttendanceDto> list = attendanceService.getUsersOfCourseAttendance(lesson.getLessonId());
        return ResponseEntity.ok().body(list);
    }

    @GetMapping("/fullAttCheck/{id}")
    public ResponseEntity<?> checkFullAttendance (@PathVariable int id) {

	    CheckLessonAttendanceDto checkLessonAttendanceDto = checkAttendanceService.getFullCheckAttendance(id);
	    return ResponseEntity.ok().body(checkLessonAttendanceDto);
    }

    @GetMapping("/trainerLesson/{id}")
    public ResponseEntity<?> getTrainerTodayLessons (@PathVariable int id) {

        List<LessonAttendanceDto> lessonAttendanceDtoList = checkAttendanceService.getTodayLessonsByTrainer(id);
        return ResponseEntity.ok().body(lessonAttendanceDtoList);
    }

    @PostMapping("/lessonAtt")
    public ResponseEntity<?> changeAttendance (@RequestBody int userId, int lessonId, String status) {

	    checkAttendanceService.changeLessonMissing(userId, lessonId, status);

        return new ResponseEntity<>(new ResponseMessage("Schedule created successfully!"), HttpStatus.OK);

    }
}